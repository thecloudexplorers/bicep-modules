trigger:
  branches:
    include:
      - feature/*
  paths:
    include:
      - src/modules/*

pool:
  vmImage: windows-latest

stages:
  - stage: dev
    jobs:
      - job: BicepModulesDeploy
        displayName: Bicep Modules Deploy
        steps:
          - checkout: self
            persistCredentials: true
            fetchDepth: 0

          - powershell: |
              Write-Host "Validate version file"
              
              $lastTag = git tag --sort=-committerdate -l | Select -First 1

              Write-Host "Last tag: $lastTag"
              Write-Host "Branch: $(Build.SourceBranch)"

              $branch = "$(Build.SourceBranch)".Replace("refs/heads/", "origin/")

              $versionFile = (git diff --name-only $lastTag $branch) -match "/version.json"          

              if($versionFile.Count -gt 1){ 
                Write-Error "More than one version file updated"
              }elseif($null -eq $versionFile -or $versionFile.Count -eq 0 -or $versionFile -eq $false){
                Write-Error "No version files were updated"
              }

              $versionFile = Get-Content -Raw -Path $versionFile | ConvertFrom-Json

              Write-Host "Module changed: '$($versionFile.module)'"
              Write-Host "Module version: '$($versionFile.version)'"

              Write-Host "##vso[task.setvariable variable=bicepModuleVersion]$($versionFile.version)"
              Write-Host "##vso[task.setvariable variable=bicepModuleName]$($versionFile.module)"


              # Write-Output "bicepModuleVersion=$($versionFile.version)" >> $env:GITHUB_ENV
              # Write-Output "bicepModuleName=$($versionFile.module)" >> $env:GITHUB_ENV
            workingDirectory: $(Build.SourcesDirectory)
            enabled: true

          - powershell: |
              Write-Host "Obtaining changed files..."
              $lastTag = git tag --sort=-committerdate -l | Select -First 1 

              $branch = "$(Build.SourceBranch)".Replace("refs/heads/", "origin/")

              $changedFiles = (git diff --name-only $lastTag $branch) | Where-Object { $_ -like "*src/modules*" }

              foreach ($file in $changedFiles ) {
                  Write-Host "Validating: '$file'"
                  if ($file -notlike "*/$env:bicepModuleName/*") {
                      Write-Error "Error: Identified changes in a module other than '$env:bicepModuleName'"
                  }
              }
            displayName: Validate changed files
            enabled: true