trigger:
  branches:
    include:
      - master

pool:
  vmImage: windows-latest

stages:
  - stage: dev
    jobs:
      - job: BicepModulesDeploy
        displayName: Bicep Modules Deploy
        variables:
          - name: revision
            value: $[counter('$(Build.SourceBranch)', 0)]
        steps:
          - checkout: self
            persistCredentials: true
            fetchDepth: 0

          - powershell: |
              Write-Host "Validate version file"

              $lastTag = git tag --sort=-committerdate -l | Where {$_ -notlike "*pre-release*"  } | Select -First 1

              Write-Host "Latest tag: $lastTag"
              Write-Host "Branch: $(Build.SourceBranch)"

              $branch = "$(Build.SourceBranch)".Replace("refs/heads/", "origin/")

              $versionFile = (git diff --name-only $lastTag $branch) -match "/version.json"

              if($versionFile.Count -gt 1){
                Write-Host $versionFile
                Write-Error "More than one version file updated"

              }elseif($null -eq $versionFile -or $versionFile.Count -eq 0 -or $versionFile -eq $false){
                Write-Error "No version files were updated"
              }

              $versionFile = Get-Content -Raw -Path $versionFile | ConvertFrom-Json

              if($branch -like "*/feature/*"){
                $preRelease = ".$(revision)-pre-release"
              }

              Write-Host "Module changed: '$($versionFile.module)'"
              Write-Host "Module version: '$($versionFile.version)'"

              Write-Host "##vso[task.setvariable variable=bicepModuleVersion]$($versionFile.version)$preRelease"
              Write-Host "##vso[task.setvariable variable=bicepModuleName]$($versionFile.module)"


              # Write-Output "bicepModuleVersion=$($versionFile.version)" >> $env:GITHUB_ENV
              # Write-Output "bicepModuleName=$($versionFile.module)" >> $env:GITHUB_ENV
            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Get version"
            enabled: true

          - powershell: |
              Write-Host "Obtaining changed files..."
              $lastTag = git tag --sort=-committerdate -l | Select -First 1

              $branch = "$(Build.SourceBranch)".Replace("refs/heads/", "origin/")

              $changedFiles = (git diff --name-only $lastTag $branch) | Where-Object { $_ -like "*src/modules*" }

              foreach ($file in $changedFiles ) {
                  Write-Host "Validating: '$file'"
                  if ($file -notlike "*/$env:bicepModuleName/*") {
                      Write-Error "Error: Identified changes in a module other than '$env:bicepModuleName'"
                  }
              }
            displayName: Validate changed files
            enabled: true

          - powershell: |
              $tagVersion = "$env:bicepModuleName-v$env:bicepModuleVersion"
              Write-Host $tagVersion

              $existingTag = git tag -l $tagVersion

              if($existingTag){
                Write-Error "Version '$tagVersion' already exist"
              }

              Write-Host "Generating tag '$tagVersion'"
              git tag $tagVersion

              git push --tags
            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Generate git tag"

          - powershell: |
              $branch = "$(Build.SourceBranch)"
              if($branch -like "*feature/test"){
                $preRelease = ".$(revision)-pre-release"

                $preReleases = git tag --sort=-committerdate -l | Where {$_ -like "$env:bicepModuleName-v$env:bicepModuleVersion*pre-release*" }

                foreach($preRelease in $preReleases){
                  Write-Host "Removing pre release version: $preRelease"
                  git push delete origin $preRelease
                }
              }

            workingDirectory: $(Build.SourcesDirectory)
            displayName: "Removing pre releases of version v$env:bicepModuleVersion"
